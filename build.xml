<?xml version="1.0" encoding="UTF-8"?>
<project basedir="." name="Win-Ini-Lib" default="main">

	<property environment="env"/>

	<!-- source directories -->
	<property name="src.dir" location="src" />

	<property name="test.src.dir" location="test" />
	
	<!-- build directories -->
	<property name="build.dir" location="build" />
	<property name="javadoc.build.dir" location="${build.dir}/javadoc" />
	<property name="lib.build.dir" location="${build.dir}/classes/win-ini-lib" />
	<property name="test.build.dir" location="${build.dir}/classes/test" />

	<!-- test output directories -->
	<property name="test.output.dir" location="${build.dir}/test" />
	<property name="testhtml.output.dir" location="${test.output.dir}/html" />
	<property name="testtxtxml.output.dir" location="${test.output.dir}/txtXml" />
	

	<!-- external libraries used for unit-testing -->
	<property name="junit.jar" location="lib/junit-4.11.jar"/>
	<property name="hamcrest.jar" location="lib/hamcrest-all-1.3.jar"/>	

	<!-- generated jar files -->
	<property name="jars.build.dir" location="${build.dir}/jars" />
	<property name="win-ini.jar" location="${jars.build.dir}/win-ini.jar"/>

	<target name="main" depends="compile,compile-test,refdoc,create-jar" description="Main target: compiles everything, creates documentation of the project and JAR files for the library.">
	</target>	

	<target name="compile" description="Compile the library.">
		<mkdir dir="${lib.build.dir}" />
		<javac srcdir="${src.dir}" destdir="${lib.build.dir}"
				debug="true"
				includeantruntime="false">
			<compilerarg value="-Xlint:all"/>
		</javac>
	</target>

	<target name="compile-test" description="Compile the test files.">
		<mkdir dir="${test.build.dir}" />
		<javac srcdir="${test.src.dir}" destdir="${test.build.dir}"
				debug="true"
				includeantruntime="false">
			<compilerarg value="-Xlint:all"/>
			<classpath>
				<pathelement path="${junit.jar}"/>
				<pathelement path="${hamcrest.jar}"/>
				<pathelement path="${lib.build.dir}"/>
			</classpath>
		</javac>
	</target>
			
	<target name="refdoc" depends="compile" description="Build Javadoc documentation of the project.">
		<mkdir dir="${javadoc.build.dir}" />
		<echo message="Running JavaDoc..." />
		<javadoc
				destdir="${javadoc.build.dir}"
				author="true"
				windowtitle="${ant.project.name}"
				overview="${src.dir}/overview.html"
				additionalparam="-Xdoclint:none">
			<packageset
				dir="${src.dir}"
				defaultexcludes="yes" />
		</javadoc>
		<echo message="Copying extra files..." />
		<copy todir="${javadoc.build.dir}">
			<fileset dir="${java.src.dir}" includes="**/doc-files/**" erroronmissingdir="false"/>
		</copy>
	</target>	
	
	<target name="create-jar" depends="compile" description="Creates JAR file for the library.">
		<jar destfile="${win-ini.jar}" basedir="${lib.build.dir}">
        </jar>
	</target>

	<target name="run-demo" depends="compile" description="Runs demo.">
		
	</target>


 	<target name="test" depends="compile,compile-test" description="Run unit-tests.">
  	  <mkdir dir="${test.output.dir}"/>
  	  <mkdir dir="${testtxtxml.output.dir}"/>
  	  <mkdir dir="${testhtml.output.dir}"/>

 	   <junit printsummary="yes">
    	   <classpath>
				<pathelement path="${junit.jar}"/>
				<pathelement path="${hamcrest.jar}"/>	
				<pathelement path="${lib.build.dir}"/>		
				<pathelement path="${test.build.dir}"/>				
			</classpath>

			<formatter type="plain"/>
      		<formatter type="xml"/>

    		<batchtest fork="yes" todir="${testtxtxml.output.dir}">
       		 	<fileset dir="${test.build.dir}"> 
       		 		<include name="**/*Test.*"/>          		 
       			</fileset>
      	    </batchtest>
       </junit>

       <junitreport todir="${test.output.dir}">
  			<fileset dir="${testtxtxml.output.dir}">
  			</fileset>
  			<report format="frames" todir="${testhtml.output.dir}"/>
	   </junitreport>

       <echo message="Test results can be found in the directory 'test'..." />
 	</target>
	
	<target name="clean" description="Remove all the generated files.">
		<delete dir="${build.dir}/" />
	</target>
</project>
